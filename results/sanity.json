{"version":"3","listProblem":[{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference FusionValueStringLineContent",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/fusion/resolve/ref/FusionResourceStringReference.java",
      "language": "JAVA",
      "line": 25,
      "offset": 43,
      "length": 28,
      "code": {
        "startLine": 23,
        "length": 28,
        "offset": 143,
        "surroundingCode": "import com.intellij.psi.PsiManager;\nimport de.vette.idea.neos.lang.fusion.psi.FusionValueStringLine;\nimport de.vette.idea.neos.lang.fusion.psi.FusionValueStringLineContent;\nimport de.vette.idea.neos.lang.fusion.resolve.ResolveEngine;\n"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "0c1517ffb06e1bc0f7d725278177a3ae0487b36e4d2277c08ec38177a2eabb30"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference FusionValueStringLineContent",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/fusion/resolve/ref/FusionStringReference.java",
      "language": "JAVA",
      "line": 69,
      "offset": 9,
      "length": 28,
      "code": {
        "startLine": 67,
        "length": 28,
        "offset": 65,
        "surroundingCode": "    @Override\n    public TextRange getRangeInElement() {\n        FusionValueStringLineContent content = getElement().getValueStringLineContent();\n        if (content != null) {\n            return new TextRange(content.getStartOffsetInParent(), content.getStartOffsetInParent() + content.getTextLength());"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "0ca626a7a0ab1b536b4ded025f715b09f955f5c026c3a63cd37a7caa49b1affe"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference FusionType",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/fusion/resolve/ref/FusionTypeReference.java",
      "language": "JAVA",
      "line": 31,
      "offset": 62,
      "length": 10,
      "code": {
        "startLine": 29,
        "length": 10,
        "offset": 85,
        "surroundingCode": "import java.util.List;\n\npublic class FusionTypeReference extends FusionReferenceBase<FusionType> implements FusionReference {\n\n    public FusionTypeReference(FusionType psiElement) {"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "1a60101dbfe354d26fe85bf967192f017d2a7200c9bed97b59e44f1c3f2edb90"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference FusionType",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/fusion/annotators/NodeTypeLineMarkerProvider.java",
      "language": "JAVA",
      "line": 45,
      "offset": 33,
      "length": 10,
      "code": {
        "startLine": 43,
        "length": 10,
        "offset": 215,
        "surroundingCode": "    public void collectSlowLineMarkers(@NotNull List<? extends PsiElement> elements, @NotNull Collection<? super LineMarkerInfo<?>> result) {\n        for (PsiElement el : elements) {\n            if (!(el instanceof FusionType)\n                    || !(el.getParent() instanceof FusionPrototypeSignature)\n                    || (el.getParent().getParent().getParent() instanceof FusionPropertyDeletion)) {"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "1b58e6bb6d9112282b625487c256621d6026ea2b80945bbf555f88978de76d6f"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference FusionValueStringLine",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/fusion/resolve/ref/FusionResourceStringReference.java",
      "language": "JAVA",
      "line": 33,
      "offset": 42,
      "length": 21,
      "code": {
        "startLine": 31,
        "length": 21,
        "offset": 164,
        "surroundingCode": "public class FusionResourceStringReference extends FusionReferenceBase<FusionValueStringLine> implements FusionReference{\n\n    public FusionResourceStringReference(FusionValueStringLine psiElement) {\n        super(psiElement);\n    }"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "38356d78a59e31efcc96ea88d710ea71b0e55378bea4fe8dd7074880f8c39f81"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference FusionPrototypeSignature",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/fusion/annotators/NodeTypeLineMarkerProvider.java",
      "language": "JAVA",
      "line": 46,
      "offset": 52,
      "length": 24,
      "code": {
        "startLine": 44,
        "length": 24,
        "offset": 136,
        "surroundingCode": "        for (PsiElement el : elements) {\n            if (!(el instanceof FusionType)\n                    || !(el.getParent() instanceof FusionPrototypeSignature)\n                    || (el.getParent().getParent().getParent() instanceof FusionPropertyDeletion)) {\n                continue;"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "5cc39d44c28ce53a7c2735e2fde5d99c07100c02c8bb44d87e14ccec9addfa17"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference FusionPrototypeSignature",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/fusion/annotators/PrototypeInheritanceAnnotator.java",
      "language": "JAVA",
      "line": 26,
      "offset": 43,
      "length": 24,
      "code": {
        "startLine": 24,
        "length": 24,
        "offset": 158,
        "surroundingCode": "import de.vette.idea.neos.lang.fusion.psi.FusionFile;\nimport de.vette.idea.neos.lang.fusion.psi.FusionPropertyCopy;\nimport de.vette.idea.neos.lang.fusion.psi.FusionPrototypeSignature;\nimport org.jetbrains.annotations.NotNull;\n"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "60bfe7d115ee475ba07463d40c01ed135be12957998c6a58482e0d92b20fb79f"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference FusionType",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/fusion/resolve/ref/FusionTypeReference.java",
      "language": "JAVA",
      "line": 33,
      "offset": 32,
      "length": 10,
      "code": {
        "startLine": 31,
        "length": 10,
        "offset": 134,
        "surroundingCode": "public class FusionTypeReference extends FusionReferenceBase<FusionType> implements FusionReference {\n\n    public FusionTypeReference(FusionType psiElement) {\n        super(psiElement);\n    }"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "728bfd570f523f1e81e227d42f0f6352077efa172806ac3c643b258cb381fb3c"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference FusionPropertyCopy",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/fusion/annotators/PrototypeInheritanceAnnotator.java",
      "language": "JAVA",
      "line": 25,
      "offset": 43,
      "length": 18,
      "code": {
        "startLine": 23,
        "length": 18,
        "offset": 132,
        "surroundingCode": "import com.intellij.psi.PsiElement;\nimport de.vette.idea.neos.lang.fusion.psi.FusionFile;\nimport de.vette.idea.neos.lang.fusion.psi.FusionPropertyCopy;\nimport de.vette.idea.neos.lang.fusion.psi.FusionPrototypeSignature;\nimport org.jetbrains.annotations.NotNull;"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "7983b89d18c0a0f5d54924b70bc9fd534c98791629d08757af2c438deb952285"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference FusionValueStringLine",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/fusion/resolve/ref/FusionStringReference.java",
      "language": "JAVA",
      "line": 22,
      "offset": 43,
      "length": 21,
      "code": {
        "startLine": 20,
        "length": 21,
        "offset": 122,
        "surroundingCode": "import com.intellij.openapi.util.TextRange;\nimport com.intellij.psi.PsiElement;\nimport de.vette.idea.neos.lang.fusion.psi.FusionValueStringLine;\nimport de.vette.idea.neos.lang.fusion.psi.FusionValueStringLineContent;\nimport de.vette.idea.neos.lang.fusion.resolve.ResolveEngine;"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "87610c4cd81c920f8308d4381df0df2ccadb2d4149cce291a35a2887e3ed97b9"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference FusionType",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/fusion/annotators/NodeTypeLineMarkerProvider.java",
      "language": "JAVA",
      "line": 51,
      "offset": 13,
      "length": 10,
      "code": {
        "startLine": 49,
        "length": 10,
        "offset": 27,
        "surroundingCode": "            }\n\n            FusionType type = (FusionType) el;\n            Collection<PsiElement> targets = ResolveEngine.getNodeTypeDefinitions(el.getProject(), type);\n            PsiElement unqualifiedType = type.getUnqualifiedType();"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "952a1e06c253ff7b70cfbe3f988cb3eb9d46d3cb7ae8a31cfcba03998f4bb5f5"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference FusionTypeImpl",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/fusion/resolve/ref/FusionTypeReference.java",
      "language": "JAVA",
      "line": 49,
      "offset": 9,
      "length": 14,
      "code": {
        "startLine": 47,
        "length": 14,
        "offset": 133,
        "surroundingCode": "    @Override\n    public PsiElement handleElementRename(@NotNull String newElementName) throws IncorrectOperationException {\n        FusionTypeImpl type = (FusionTypeImpl)FusionElementFactory.createType(myElement.getProject(), newElementName);\n        ASTNode node = myElement.getNode();\n        ASTNode newTypeNode = type.getNode();"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "a0c31313df0868c28e4cfa40e3926c3c118eed7175ae6267808b40db0613ca43"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference FusionPropertyDeletion",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/fusion/annotators/NodeTypeLineMarkerProvider.java",
      "language": "JAVA",
      "line": 47,
      "offset": 75,
      "length": 22,
      "code": {
        "startLine": 45,
        "length": 22,
        "offset": 195,
        "surroundingCode": "            if (!(el instanceof FusionType)\n                    || !(el.getParent() instanceof FusionPrototypeSignature)\n                    || (el.getParent().getParent().getParent() instanceof FusionPropertyDeletion)) {\n                continue;\n            }"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "a1d839a4d98e07fd359c30b08929569b79b4328e59516f134449788f94070867"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference FusionValueStringLineContent",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/fusion/resolve/ref/FusionResourceStringReference.java",
      "language": "JAVA",
      "line": 52,
      "offset": 9,
      "length": 28,
      "code": {
        "startLine": 50,
        "length": 28,
        "offset": 65,
        "surroundingCode": "    @Override\n    public TextRange getRangeInElement() {\n        FusionValueStringLineContent content = getElement().getValueStringLineContent();\n        if (content != null) {\n            return new TextRange(content.getStartOffsetInParent(), content.getStartOffsetInParent() + content.getTextLength());"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "b1896566ef361325d0d86bd571db384199f55ae679ef349e6cff2be683eb4550"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference FusionValueStringLine",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/fusion/resolve/ref/FusionStringReference.java",
      "language": "JAVA",
      "line": 32,
      "offset": 34,
      "length": 21,
      "code": {
        "startLine": 30,
        "length": 21,
        "offset": 148,
        "surroundingCode": "public class FusionStringReference extends FusionReferenceBase<FusionValueStringLine> implements FusionReference{\n\n    public FusionStringReference(FusionValueStringLine psiElement) {\n        super(psiElement);\n    }"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "be8b809b82b1543e8e6cef787ba9f235b85112bc2d86adcd91428b7ab9628200"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference FusionValueStringLineContent",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/fusion/resolve/ref/FusionStringReference.java",
      "language": "JAVA",
      "line": 23,
      "offset": 43,
      "length": 28,
      "code": {
        "startLine": 21,
        "length": 28,
        "offset": 143,
        "surroundingCode": "import com.intellij.psi.PsiElement;\nimport de.vette.idea.neos.lang.fusion.psi.FusionValueStringLine;\nimport de.vette.idea.neos.lang.fusion.psi.FusionValueStringLineContent;\nimport de.vette.idea.neos.lang.fusion.resolve.ResolveEngine;\nimport de.vette.idea.neos.util.PhpElementsUtil;"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "c2196b3b261e8d7cc65db325cd8cdf08abbf80cbf217ce897e57e006042c763e"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference FusionValueStringLine",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/fusion/resolve/ref/FusionResourceStringReference.java",
      "language": "JAVA",
      "line": 24,
      "offset": 43,
      "length": 21,
      "code": {
        "startLine": 22,
        "length": 21,
        "offset": 114,
        "surroundingCode": "import com.intellij.psi.PsiElement;\nimport com.intellij.psi.PsiManager;\nimport de.vette.idea.neos.lang.fusion.psi.FusionValueStringLine;\nimport de.vette.idea.neos.lang.fusion.psi.FusionValueStringLineContent;\nimport de.vette.idea.neos.lang.fusion.resolve.ResolveEngine;"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "dcb91f8c9a1b880bea79e6808ae1b3a8f57e18662f30bda160182cededbcbd43"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference FusionPropertyCopy",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/fusion/annotators/PrototypeInheritanceAnnotator.java",
      "language": "JAVA",
      "line": 33,
      "offset": 32,
      "length": 18,
      "code": {
        "startLine": 31,
        "length": 18,
        "offset": 135,
        "surroundingCode": "    @Override\n    public void annotate(@NotNull PsiElement element, @NotNull AnnotationHolder holder) {\n        if (element instanceof FusionPropertyCopy) {\n            FusionPropertyCopy copy = (FusionPropertyCopy) element;\n            if (copy.isPrototypeInheritance()"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "de90c472b143c7f65e213ad902616e034dfc307c85ad6d0e8c5b8edae681fe48"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference FusionTypeImpl",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/fusion/resolve/ref/FusionTypeReference.java",
      "language": "JAVA",
      "line": 49,
      "offset": 32,
      "length": 14,
      "code": {
        "startLine": 47,
        "length": 14,
        "offset": 156,
        "surroundingCode": "    @Override\n    public PsiElement handleElementRename(@NotNull String newElementName) throws IncorrectOperationException {\n        FusionTypeImpl type = (FusionTypeImpl)FusionElementFactory.createType(myElement.getProject(), newElementName);\n        ASTNode node = myElement.getNode();\n        ASTNode newTypeNode = type.getNode();"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "e98cef6028dcbf3eb1690bf347938578e177aa39a30712726536fb2fb1ca7bcd"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference FusionPropertyCopy",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/fusion/annotators/PrototypeInheritanceAnnotator.java",
      "language": "JAVA",
      "line": 34,
      "offset": 13,
      "length": 18,
      "code": {
        "startLine": 32,
        "length": 18,
        "offset": 155,
        "surroundingCode": "    public void annotate(@NotNull PsiElement element, @NotNull AnnotationHolder holder) {\n        if (element instanceof FusionPropertyCopy) {\n            FusionPropertyCopy copy = (FusionPropertyCopy) element;\n            if (copy.isPrototypeInheritance()\n                    && !(element.getParent() instanceof FusionFile)"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "f8c1a5343f3a31589dc6fd4d20c523ad818944498659f0736e78c8d95a638197"
}]}