{"version":"3","listProblem":[{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference FusionPrototypeSignature",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/fusion/completion/PrototypeProvider.java",
      "language": "JAVA",
      "line": 44,
      "offset": 24,
      "length": 24,
      "code": {
        "startLine": 42,
        "length": 24,
        "offset": 58,
        "surroundingCode": "\n        for (String key : keys) {\n            Collection<FusionPrototypeSignature> prototypes = StubIndex.getElements(FusionPrototypeDeclarationIndex.KEY, key, project, GlobalSearchScope.projectScope(project), FusionPrototypeSignature.class );\n            for (FusionPrototypeSignature signature : prototypes) {\n                if (signature.getType() != null) {"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "019fbe3d95c97f753ddde4967f69568f929ccf3935b6b0a6abb0228d1ce5da88"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference FusionValueDsl",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/fusion/patterns/FusionPatterns.java",
      "language": "JAVA",
      "line": 35,
      "offset": 21,
      "length": 14,
      "code": {
        "startLine": 33,
        "length": 14,
        "offset": 162,
        "surroundingCode": "            public boolean accepts(@Nullable Object o, ProcessingContext context) {\n                if (o instanceof FusionValueDslContent) {\n                    FusionValueDsl s = (FusionValueDsl) ((FusionValueDslContent) o).getParent();\n                    return s.getDslIdentifier().getText().equals(identifier);\n                }"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "126d72c66c6abc6aa5cc3e8a434ddc87c128d524eb1893519a200fd46b9851ed"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference FusionPrototypeSignature",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/search/FusionPrototypeDeclarationContributor.java",
      "language": "JAVA",
      "line": 29,
      "offset": 98,
      "length": 24,
      "code": {
        "startLine": 27,
        "length": 24,
        "offset": 195,
        "surroundingCode": "        prototypeNames.forEach(prototypeName -> {\n            var prototypeSignatures = StubIndex\n                .getElements(FusionPrototypeDeclarationIndex.KEY, prototypeName, project, scope, FusionPrototypeSignature.class);\n            prototypeSignatures.forEach(signature -> {\n                if (signature.getType() != null) {"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "16ff59c22e29aedb8a7a951028c9427460bbdde81fbff277945d76d022c485b3"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference FusionValueDslContent",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/fusion/psi/impl/ext/FusionValueDslContentImplMixin.java",
      "language": "JAVA",
      "line": 29,
      "offset": 82,
      "length": 21,
      "code": {
        "startLine": 27,
        "length": 21,
        "offset": 124,
        "surroundingCode": "import org.jetbrains.annotations.NotNull;\n\npublic class FusionValueDslContentImplMixin extends FusionElementImpl implements FusionValueDslContent {\n\n    public FusionValueDslContentImplMixin(@NotNull ASTNode astNode) {"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "24502815018edcdb88b9b298ab2d8aef107e1af5f09d08015c9fa55788afbd63"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference FusionPrototypeSignature",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/search/FusionPrototypeDeclarationContributor.java",
      "language": "JAVA",
      "line": 42,
      "offset": 20,
      "length": 24,
      "code": {
        "startLine": 40,
        "length": 24,
        "offset": 130,
        "surroundingCode": "        var nameParts = name.split(\":\");\n        var indexedName = nameParts.length > 1 ? nameParts[1] : name;\n        Collection<FusionPrototypeSignature> prototypes = StubIndex.getElements(FusionPrototypeDeclarationIndex.KEY, indexedName, parameters.getProject(), parameters.getSearchScope(), FusionPrototypeSignature.class);\n        prototypes.forEach(prototypeSignature -> {\n            if (prototypeSignature.getType() != null) {"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "2eb39b117a12124ea3847f1a1f13cde1d5f48024a2da6344d7b539abde5fd67b"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference FusionPrototypeSignature",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/search/FusionPrototypeDeclarationContributor.java",
      "language": "JAVA",
      "line": 42,
      "offset": 185,
      "length": 24,
      "code": {
        "startLine": 40,
        "length": 24,
        "offset": 295,
        "surroundingCode": "        var nameParts = name.split(\":\");\n        var indexedName = nameParts.length > 1 ? nameParts[1] : name;\n        Collection<FusionPrototypeSignature> prototypes = StubIndex.getElements(FusionPrototypeDeclarationIndex.KEY, indexedName, parameters.getProject(), parameters.getSearchScope(), FusionPrototypeSignature.class);\n        prototypes.forEach(prototypeSignature -> {\n            if (prototypeSignature.getType() != null) {"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "3d3cbdcd78e8ed15f06eb7e3bd038393ef42034a009730b86a2025a11b0a2df6"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference EelTypes",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/fusion/formatter/FusionFormattingModelBuilder.java",
      "language": "JAVA",
      "line": 28,
      "offset": 40,
      "length": 8,
      "code": {
        "startLine": 26,
        "length": 8,
        "offset": 176,
        "surroundingCode": "import com.intellij.psi.codeStyle.CommonCodeStyleSettings;\nimport com.intellij.psi.formatter.common.DefaultInjectedLanguageBlockBuilder;\nimport de.vette.idea.neos.lang.eel.psi.EelTypes;\nimport de.vette.idea.neos.lang.fusion.FusionLanguage;\nimport de.vette.idea.neos.lang.fusion.editor.FusionBlock;"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "4a43089fcaac77e89e098fb2d7651f6aba087887bdfb485ecf370fc3cbab5d6c"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference FusionPrototypeSignature",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/fusion/psi/impl/ext/FusionPrototypeSignatureImplMixin.java",
      "language": "JAVA",
      "line": 35,
      "offset": 20,
      "length": 24,
      "code": {
        "startLine": 33,
        "length": 24,
        "offset": 146,
        "surroundingCode": "public abstract class FusionPrototypeSignatureImplMixin\n        extends FusionStubbedElementImpl<FusionPrototypeSignatureStub>\n        implements FusionPrototypeSignature {\n\n    public FusionPrototypeSignatureImplMixin(@NotNull ASTNode astNode) {"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "5e136757af46fb31bf5fa97c1ce5d82d862594c296de4c8e9ee2358baec38737"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference FusionValueDslContent",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/fusion/psi/impl/ext/FusionValueDslContentImplMixin.java",
      "language": "JAVA",
      "line": 25,
      "offset": 43,
      "length": 21,
      "code": {
        "startLine": 23,
        "length": 21,
        "offset": 162,
        "surroundingCode": "import com.intellij.psi.PsiLanguageInjectionHost;\nimport de.vette.idea.neos.lang.fusion.injection.FusionDslTextEscaper;\nimport de.vette.idea.neos.lang.fusion.psi.FusionValueDslContent;\nimport de.vette.idea.neos.lang.fusion.psi.impl.FusionElementImpl;\nimport org.jetbrains.annotations.NotNull;"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "68be7b3b36b01c247ec2b666f4249d61cded6e625b5277fec06279669bf52d49"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference FusionPropertyBlock",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/fusion/psi/impl/ext/FusionPrototypeSignatureImplMixin.java",
      "language": "JAVA",
      "line": 48,
      "offset": 56,
      "length": 19,
      "code": {
        "startLine": 46,
        "length": 19,
        "offset": 149,
        "surroundingCode": "        return isSingleLineDefinition()\n                || (isSingleElementInPathAtFileRoot()\n                && (getParent().getParent() instanceof FusionPropertyBlock\n                || getParent().getParent() instanceof FusionPropertyCopy));\n    }"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "75178e46f1a80c312d915122d7603e6f99e3fc4dbb530d1498286d93fba384d1"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference FusionTypes",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/fusion/completion/FusionCompletionContributor.java",
      "language": "JAVA",
      "line": 23,
      "offset": 43,
      "length": 11,
      "code": {
        "startLine": 21,
        "length": 11,
        "offset": 167,
        "surroundingCode": "import com.intellij.codeInsight.completion.CompletionContributor;\nimport com.intellij.codeInsight.completion.CompletionType;\nimport de.vette.idea.neos.lang.fusion.psi.FusionTypes;\n\nimport static com.intellij.patterns.PlatformPatterns.psiElement;"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "780fdd5aca66407b3c9d00b0a35dedc89ab670ee30ff10404960c28558bfbbc9"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference FusionPrototypeSignature",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/fusion/completion/PrototypeProvider.java",
      "language": "JAVA",
      "line": 30,
      "offset": 43,
      "length": 24,
      "code": {
        "startLine": 28,
        "length": 24,
        "offset": 143,
        "surroundingCode": "import com.intellij.util.ProcessingContext;\nimport de.vette.idea.neos.lang.fusion.icons.FusionIcons;\nimport de.vette.idea.neos.lang.fusion.psi.FusionPrototypeSignature;\nimport de.vette.idea.neos.lang.fusion.stubs.index.FusionPrototypeDeclarationIndex;\nimport org.jetbrains.annotations.NotNull;"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "83d0ab608ea1c7b3d43079f19a0718e0034fecfac0307d2926d7a4356b462f9e"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference FusionPath",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/fusion/psi/impl/ext/FusionPrototypeSignatureImplMixin.java",
      "language": "JAVA",
      "line": 67,
      "offset": 22,
      "length": 10,
      "code": {
        "startLine": 65,
        "length": 10,
        "offset": 128,
        "surroundingCode": "    protected boolean isSingleElementInPathAtFileRoot() {\n        return getParent() instanceof FusionPath\n                && ((FusionPath) getParent()).isPrototypeSignature()\n                && getParent().getParent().getParent() instanceof FusionFile;\n    }"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "85f5d675ac4cf52b306d8668b3c8367e07292fd0869af0bd93dc8dc51eedab4a"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference FusionPrototypeSignature",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/search/FusionPrototypeDeclarationContributor.java",
      "language": "JAVA",
      "line": 13,
      "offset": 43,
      "length": 24,
      "code": {
        "startLine": 11,
        "length": 24,
        "offset": 143,
        "surroundingCode": "import com.intellij.util.indexing.IdFilter;\nimport de.vette.idea.neos.lang.fusion.icons.FusionIcons;\nimport de.vette.idea.neos.lang.fusion.psi.FusionPrototypeSignature;\nimport de.vette.idea.neos.lang.fusion.stubs.index.FusionPrototypeDeclarationIndex;\nimport org.jetbrains.annotations.NotNull;"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "8e0dd902249dda0e532bb322f20d476af4cfc915b583c49c961170925cb40e61"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference FusionValueDslContent",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/fusion/patterns/FusionPatterns.java",
      "language": "JAVA",
      "line": 34,
      "offset": 34,
      "length": 21,
      "code": {
        "startLine": 32,
        "length": 21,
        "offset": 226,
        "surroundingCode": "        return new Capture(new InitialPatternCondition<FusionValueDslContent>(FusionValueDslContent.class) {\n            public boolean accepts(@Nullable Object o, ProcessingContext context) {\n                if (o instanceof FusionValueDslContent) {\n                    FusionValueDsl s = (FusionValueDsl) ((FusionValueDslContent) o).getParent();\n                    return s.getDslIdentifier().getText().equals(identifier);"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "a3ef619316b318711d118ae6d94f0869aa9250f89ddece7063a42f75850d5d23"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference FusionValueDslContent",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/fusion/patterns/FusionPatterns.java",
      "language": "JAVA",
      "line": 35,
      "offset": 59,
      "length": 21,
      "code": {
        "startLine": 33,
        "length": 21,
        "offset": 200,
        "surroundingCode": "            public boolean accepts(@Nullable Object o, ProcessingContext context) {\n                if (o instanceof FusionValueDslContent) {\n                    FusionValueDsl s = (FusionValueDsl) ((FusionValueDslContent) o).getParent();\n                    return s.getDslIdentifier().getText().equals(identifier);\n                }"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "ad2042c1ed0ac7142c92f88c3b14823be08061b98e0d589e05c86d025a1fc8f3"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference FusionPrototypeSignature",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/fusion/completion/PrototypeProvider.java",
      "language": "JAVA",
      "line": 44,
      "offset": 177,
      "length": 24,
      "code": {
        "startLine": 42,
        "length": 24,
        "offset": 211,
        "surroundingCode": "\n        for (String key : keys) {\n            Collection<FusionPrototypeSignature> prototypes = StubIndex.getElements(FusionPrototypeDeclarationIndex.KEY, key, project, GlobalSearchScope.projectScope(project), FusionPrototypeSignature.class );\n            for (FusionPrototypeSignature signature : prototypes) {\n                if (signature.getType() != null) {"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "bb005f9521077477c1e9542b93d300eddec4e919837136e8b23afa2abda34ff0"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference FusionValueStringLine",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/fusion/resolve/ref/FusionStringReference.java",
      "language": "JAVA",
      "line": 32,
      "offset": 34,
      "length": 21,
      "code": {
        "startLine": 30,
        "length": 21,
        "offset": 148,
        "surroundingCode": "public class FusionStringReference extends FusionReferenceBase<FusionValueStringLine> implements FusionReference{\n\n    public FusionStringReference(FusionValueStringLine psiElement) {\n        super(psiElement);\n    }"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "be8b809b82b1543e8e6cef787ba9f235b85112bc2d86adcd91428b7ab9628200"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference FusionPath",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/fusion/psi/impl/ext/FusionPrototypeSignatureImplMixin.java",
      "language": "JAVA",
      "line": 66,
      "offset": 39,
      "length": 10,
      "code": {
        "startLine": 64,
        "length": 10,
        "offset": 97,
        "surroundingCode": "\n    protected boolean isSingleElementInPathAtFileRoot() {\n        return getParent() instanceof FusionPath\n                && ((FusionPath) getParent()).isPrototypeSignature()\n                && getParent().getParent().getParent() instanceof FusionFile;"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "cd80473068d9717c9e75e11cd1ad60bfff655efbe468c0d35552fb6625fcd025"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference FusionValueDsl",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/fusion/patterns/FusionPatterns.java",
      "language": "JAVA",
      "line": 35,
      "offset": 41,
      "length": 14,
      "code": {
        "startLine": 33,
        "length": 14,
        "offset": 182,
        "surroundingCode": "            public boolean accepts(@Nullable Object o, ProcessingContext context) {\n                if (o instanceof FusionValueDslContent) {\n                    FusionValueDsl s = (FusionValueDsl) ((FusionValueDslContent) o).getParent();\n                    return s.getDslIdentifier().getText().equals(identifier);\n                }"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "d8a193a62481c4ea348134b1f3c8b318c1161324e23637f31a556684e1d824a5"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference FusionTypes",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/fusion/formatter/FusionFormattingModelBuilder.java",
      "language": "JAVA",
      "line": 31,
      "offset": 43,
      "length": 11,
      "code": {
        "startLine": 29,
        "length": 11,
        "offset": 154,
        "surroundingCode": "import de.vette.idea.neos.lang.fusion.FusionLanguage;\nimport de.vette.idea.neos.lang.fusion.editor.FusionBlock;\nimport de.vette.idea.neos.lang.fusion.psi.FusionTypes;\nimport org.jetbrains.annotations.NotNull;\nimport org.jetbrains.annotations.Nullable;"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "db60b114155d1935aee030e4b7334f466a1df1ba064c2cb3f9058e6ff6e8695a"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference FusionPrototypeSignature",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/fusion/completion/PrototypeProvider.java",
      "language": "JAVA",
      "line": 45,
      "offset": 18,
      "length": 24,
      "code": {
        "startLine": 43,
        "length": 24,
        "offset": 261,
        "surroundingCode": "        for (String key : keys) {\n            Collection<FusionPrototypeSignature> prototypes = StubIndex.getElements(FusionPrototypeDeclarationIndex.KEY, key, project, GlobalSearchScope.projectScope(project), FusionPrototypeSignature.class );\n            for (FusionPrototypeSignature signature : prototypes) {\n                if (signature.getType() != null) {\n                    result.addElement(LookupElementBuilder.create(signature.getType().getText()).withIcon(FusionIcons.PROTOTYPE));"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "ec95842579d9b1bdfa85ffba0df174a4e9ed7721b3975c9b0f480d0f9dd39a0d"
}]}