{"version":"3","listProblem":[{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference FusionType",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/fusion/usages/PrototypeFindUsagesProvider.java",
      "language": "JAVA",
      "line": 66,
      "offset": 13,
      "length": 10,
      "code": {
        "startLine": 64,
        "length": 10,
        "offset": 153,
        "surroundingCode": "    public @Nls @NotNull String getDescriptiveName(@NotNull PsiElement element) {\n        if (element instanceof FusionPrototypeSignature) {\n            FusionType type = ((FusionPrototypeSignature) element).getType();\n            if (type != null && type.getText() != null) {\n                return type.getText();"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "09b727f0306246ab097385dfde3666028d54ece24a31bd05ff643175d00f53cb"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference FusionValueDslContent",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/fusion/injection/FusionDslTextEscaper.java",
      "language": "JAVA",
      "line": 26,
      "offset": 62,
      "length": 21,
      "code": {
        "startLine": 24,
        "length": 21,
        "offset": 104,
        "surroundingCode": "import org.jetbrains.annotations.NotNull;\n\npublic class FusionDslTextEscaper extends LiteralTextEscaper<FusionValueDslContent> {\n\n    public FusionDslTextEscaper(@NotNull FusionValueDslContent host) {"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "0c30a2f0d59799954b091b3f341dd4643754bf2b767594f9ced9f1dc7dc09da1"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference FusionValueDslContent",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/fusion/injection/FusionDslTextEscaper.java",
      "language": "JAVA",
      "line": 23,
      "offset": 43,
      "length": 21,
      "code": {
        "startLine": 21,
        "length": 21,
        "offset": 130,
        "surroundingCode": "import com.intellij.openapi.util.TextRange;\nimport com.intellij.psi.LiteralTextEscaper;\nimport de.vette.idea.neos.lang.fusion.psi.FusionValueDslContent;\nimport org.jetbrains.annotations.NotNull;\n"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "0d463c947a15127f5ae0c1402d87e6fe8560ce7170a3d8190b547ad0d272affa"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference FusionLexer",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/fusion/FusionLexerAdapter.java",
      "language": "JAVA",
      "line": 31,
      "offset": 35,
      "length": 11,
      "code": {
        "startLine": 29,
        "length": 11,
        "offset": 69,
        "surroundingCode": "\n    public FusionLexerAdapter() {\n        super(new FlexAdapter(new FusionLexer()), TOKENS_TO_MERGE);\n    }\n}"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "0fb9f8d7f955693b3a439a6d2770c0a2b04ae5626f7a57302583232c89ad644c"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference EelCompositeIdentifier",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/eel/psi/impl/ext/EelCompositeIdentifierImplMixin.java",
      "language": "JAVA",
      "line": 10,
      "offset": 89,
      "length": 22,
      "code": {
        "startLine": 8,
        "length": 22,
        "offset": 131,
        "surroundingCode": "import org.jetbrains.annotations.NotNull;\n\npublic abstract class EelCompositeIdentifierImplMixin extends EelElementImpl implements EelCompositeIdentifier {\n\n    public EelCompositeIdentifierImplMixin(@NotNull ASTNode astNode) {"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "20de25dd4efe5f24c2c2113151974b8044ff9fd74b890df3e977d7c0330510d1"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference FusionValueDslContent",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/fusion/injection/FusionDslTextEscaper.java",
      "language": "JAVA",
      "line": 28,
      "offset": 42,
      "length": 21,
      "code": {
        "startLine": 26,
        "length": 21,
        "offset": 128,
        "surroundingCode": "public class FusionDslTextEscaper extends LiteralTextEscaper<FusionValueDslContent> {\n\n    public FusionDslTextEscaper(@NotNull FusionValueDslContent host) {\n        super(host);\n    }"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "34745b43e5c7089ef3050e15f37a9fbc011bf02a017bd5395239427b1d3f1aba"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference FusionPrototypeSignature",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/fusion/psi/FusionElementFactory.java",
      "language": "JAVA",
      "line": 11,
      "offset": 19,
      "length": 24,
      "code": {
        "startLine": 9,
        "length": 24,
        "offset": 67,
        "surroundingCode": "public class FusionElementFactory {\n    @NotNull\n    public static FusionPrototypeSignature createPrototypeSignature(@NotNull Project project, @NonNls @NotNull String name) {\n        final FusionFile dummyFile = createFusionFile(project, getPrototypeSignatureText(name));\n        return (FusionPrototypeSignature) dummyFile.getFirstChild().getFirstChild().getFirstChild();"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "35e53f81fb1d232cca83c9e1ba8a5665b3233285ac0a06f33072d3cc1be48faa"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference EelCompositeIdentifier",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/eel/psi/impl/ext/EelCompositeIdentifierImplMixin.java",
      "language": "JAVA",
      "line": 4,
      "offset": 40,
      "length": 22,
      "code": {
        "startLine": 2,
        "length": 22,
        "offset": 74,
        "surroundingCode": "\nimport com.intellij.lang.ASTNode;\nimport de.vette.idea.neos.lang.eel.psi.EelCompositeIdentifier;\nimport de.vette.idea.neos.lang.eel.psi.impl.EelElementImpl;\nimport de.vette.idea.neos.lang.eel.resolve.ref.EelCompositeIdentifierReference;"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "39a0e63fea001007d1dc0ca175fa721849a85e1bd116ede0813cee677abc3b59"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference EelMethodName",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/eel/psi/impl/ext/EelMethodNameImplMixin.java",
      "language": "JAVA",
      "line": 11,
      "offset": 71,
      "length": 13,
      "code": {
        "startLine": 9,
        "length": 13,
        "offset": 113,
        "surroundingCode": "import org.jetbrains.annotations.NotNull;\n\npublic class EelMethodNameImplMixin extends EelElementImpl implements EelMethodName {\n\n    public EelMethodNameImplMixin(@NotNull ASTNode node) {"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "57ea33b248cc0762a3233dd7f2c9efc198139f46f454755dbccc4ff5f652a332"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference FusionLexer",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/fusion/FusionLexerAdapter.java",
      "language": "JAVA",
      "line": 24,
      "offset": 46,
      "length": 11,
      "code": {
        "startLine": 22,
        "length": 11,
        "offset": 131,
        "surroundingCode": "import com.intellij.lexer.MergingLexerAdapter;\nimport com.intellij.psi.tree.TokenSet;\nimport de.vette.idea.neos.lang.fusion.parser.FusionLexer;\nimport de.vette.idea.neos.lang.fusion.psi.FusionTypes;\n"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "5ae0908762eaaacf9e66d59e990903e9af355942750c445878c92828433cc1d0"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference FusionNamespace",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/fusion/resolve/ResolveEngine.java",
      "language": "JAVA",
      "line": 173,
      "offset": 13,
      "length": 15,
      "code": {
        "startLine": 171,
        "length": 15,
        "offset": 50,
        "surroundingCode": "\n        if (!namespaces.isEmpty()) {\n            FusionNamespace namespace = namespaces.iterator().next().getNamespace();\n            if (namespace != null) {\n                return namespace.getText();"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "624eb78f4860f353b3bba54ab2e5e00b7526dc6a08916fdf8af225b722977969"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference FusionTypes",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/fusion/FusionLexerAdapter.java",
      "language": "JAVA",
      "line": 25,
      "offset": 43,
      "length": 11,
      "code": {
        "startLine": 23,
        "length": 11,
        "offset": 139,
        "surroundingCode": "import com.intellij.psi.tree.TokenSet;\nimport de.vette.idea.neos.lang.fusion.parser.FusionLexer;\nimport de.vette.idea.neos.lang.fusion.psi.FusionTypes;\n\npublic class FusionLexerAdapter extends MergingLexerAdapter {"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "718a2e9263bdc21c541598a1306825710c21328249f30596a27f9fcce90cf054"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference FusionType",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/fusion/resolve/ResolveEngine.java",
      "language": "JAVA",
      "line": 153,
      "offset": 77,
      "length": 10,
      "code": {
        "startLine": 151,
        "length": 10,
        "offset": 90,
        "surroundingCode": "\n    @NotNull\n    public static List<PsiElement> getPrototypeDefinitions(Project project, FusionType type) {\n        String instanceName = type.getUnqualifiedType().getText();\n        String instanceNs = null;"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "733dbc37784db42f1f13a511ff66ebf86a8b0fae87f64086e2d46fad50ef3baf"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference EelMethodName",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/eel/psi/impl/ext/EelMethodNameImplMixin.java",
      "language": "JAVA",
      "line": 5,
      "offset": 40,
      "length": 13,
      "code": {
        "startLine": 3,
        "length": 13,
        "offset": 109,
        "surroundingCode": "import com.intellij.lang.ASTNode;\nimport com.intellij.psi.PsiElement;\nimport de.vette.idea.neos.lang.eel.psi.EelMethodName;\nimport de.vette.idea.neos.lang.eel.psi.impl.EelElementImpl;\nimport de.vette.idea.neos.lang.eel.resolve.ref.EelMethodNameReference;"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "78802d8ff9019d62b65c0f66dbcb4f8f19946cb82787cd59c3a34ea2638ab34f"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference FusionPrototypeSignature",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/fusion/psi/FusionElementFactory.java",
      "language": "JAVA",
      "line": 19,
      "offset": 9,
      "length": 24,
      "code": {
        "startLine": 17,
        "length": 24,
        "offset": 203,
        "surroundingCode": "    public static FusionType createType(@NotNull Project project, @NonNls @NotNull String name) {\n        final FusionFile dummyFile = createFusionFile(project, getPrototypeSignatureText(name));\n        FusionPrototypeSignature signature = (FusionPrototypeSignature) dummyFile.getFirstChild().getFirstChild().getFirstChild();\n        return signature.getType();\n    }"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "7f4b6c402c24740836263d52fd43139b03ff8fad27b0f6ff53377e6cec5573ea"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference FusionPrototypeSignature",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/fusion/usages/PrototypeFindUsagesProvider.java",
      "language": "JAVA",
      "line": 65,
      "offset": 32,
      "length": 24,
      "code": {
        "startLine": 63,
        "length": 24,
        "offset": 127,
        "surroundingCode": "    @Override\n    public @Nls @NotNull String getDescriptiveName(@NotNull PsiElement element) {\n        if (element instanceof FusionPrototypeSignature) {\n            FusionType type = ((FusionPrototypeSignature) element).getType();\n            if (type != null && type.getText() != null) {"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "88b12b93cd1cad3d5a8c4da428e533d69262bcb74d70feb6abe4c9746e525de9"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference FusionPrototypeSignature",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/fusion/usages/PrototypeFindUsagesProvider.java",
      "language": "JAVA",
      "line": 77,
      "offset": 32,
      "length": 24,
      "code": {
        "startLine": 75,
        "length": 24,
        "offset": 141,
        "surroundingCode": "    @Override\n    public @Nls @NotNull String getNodeText(@NotNull PsiElement element, boolean useFullName) {\n        if (element instanceof FusionPrototypeSignature) {\n            FusionType type = ((FusionPrototypeSignature) element).getType();\n            if (type != null && type.getText() != null) {"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "d2c3dad45cf6f8e7f6b3a763c1e402ead821cd139cbd6ba84d00b01ddcdccc44"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference FusionPrototypeSignature",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/fusion/usages/PrototypeFindUsagesProvider.java",
      "language": "JAVA",
      "line": 66,
      "offset": 33,
      "length": 24,
      "code": {
        "startLine": 64,
        "length": 24,
        "offset": 173,
        "surroundingCode": "    public @Nls @NotNull String getDescriptiveName(@NotNull PsiElement element) {\n        if (element instanceof FusionPrototypeSignature) {\n            FusionType type = ((FusionPrototypeSignature) element).getType();\n            if (type != null && type.getText() != null) {\n                return type.getText();"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "dc5dc418638d11b551ed353ac9ba715bdcd3278caf7c7d087fc21a116c3b7dd3"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference FusionNamespaceDeclaration",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/fusion/resolve/ResolveEngine.java",
      "language": "JAVA",
      "line": 165,
      "offset": 20,
      "length": 26,
      "code": {
        "startLine": 163,
        "length": 26,
        "offset": 113,
        "surroundingCode": "    @Nullable\n    private static String findNamespaceByAlias(Project project, String alias) {\n        Collection<FusionNamespaceDeclaration> namespaces = StubIndex.getElements(\n                FusionNamespaceDeclarationIndex.KEY,\n                alias,"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "f15127a732e00345d0217d40576df8ba86c394dbf23b6d972a8e95364e57f578"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference FusionPrototypeSignature",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/fusion/psi/FusionElementFactory.java",
      "language": "JAVA",
      "line": 19,
      "offset": 47,
      "length": 24,
      "code": {
        "startLine": 17,
        "length": 24,
        "offset": 241,
        "surroundingCode": "    public static FusionType createType(@NotNull Project project, @NonNls @NotNull String name) {\n        final FusionFile dummyFile = createFusionFile(project, getPrototypeSignatureText(name));\n        FusionPrototypeSignature signature = (FusionPrototypeSignature) dummyFile.getFirstChild().getFirstChild().getFirstChild();\n        return signature.getType();\n    }"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "f1a16434e64a3df74a5315c7d293470bbe898104bc86ff59b99d2f1e93665d89"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference FusionNamespaceDeclaration",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/fusion/resolve/ResolveEngine.java",
      "language": "JAVA",
      "line": 170,
      "offset": 17,
      "length": 26,
      "code": {
        "startLine": 168,
        "length": 26,
        "offset": 98,
        "surroundingCode": "                project,\n                GlobalSearchScope.projectScope(project),\n                FusionNamespaceDeclaration.class);\n\n        if (!namespaces.isEmpty()) {"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "fa698424e136828832af7c6b11ff0f71bdf3355fe760ae72f7973856f07c869d"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference FusionType",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/fusion/psi/FusionElementFactory.java",
      "language": "JAVA",
      "line": 17,
      "offset": 19,
      "length": 10,
      "code": {
        "startLine": 15,
        "length": 10,
        "offset": 32,
        "surroundingCode": "\n    @NotNull\n    public static FusionType createType(@NotNull Project project, @NonNls @NotNull String name) {\n        final FusionFile dummyFile = createFusionFile(project, getPrototypeSignatureText(name));\n        FusionPrototypeSignature signature = (FusionPrototypeSignature) dummyFile.getFirstChild().getFirstChild().getFirstChild();"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "fc0242f51a29a165f6fac67afcbaf6d3bcd7a9cfc92e88f9b53f8ec59bc87f43"
}]}