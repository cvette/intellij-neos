{"version":"3","listProblem":[{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference FusionPrototypeSignature",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/fusion/completion/PrototypeProvider.java",
      "language": "JAVA",
      "line": 44,
      "offset": 24,
      "length": 24,
      "code": {
        "startLine": 42,
        "length": 24,
        "offset": 58,
        "surroundingCode": "\n        for (String key : keys) {\n            Collection<FusionPrototypeSignature> prototypes = StubIndex.getElements(FusionPrototypeDeclarationIndex.KEY, key, project, GlobalSearchScope.projectScope(project), FusionPrototypeSignature.class );\n            for (FusionPrototypeSignature signature : prototypes) {\n                if (signature.getType() != null) {"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "019fbe3d95c97f753ddde4967f69568f929ccf3935b6b0a6abb0228d1ce5da88"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference FusionPrototypeSignature",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/fusion/refactoring/MovePrototypeDialog.java",
      "language": "JAVA",
      "line": 344,
      "offset": 105,
      "length": 24,
      "code": {
        "startLine": 342,
        "length": 24,
        "offset": 234,
        "surroundingCode": "\n    private static class PrototypeSelectionTable extends AbstractMemberSelectionTable<FusionPrototypeSignature, PrototypeInfo> {\n        public PrototypeSelectionTable(Collection<PrototypeInfo> memberInfos, @Nullable MemberInfoModel<FusionPrototypeSignature, PrototypeInfo> memberInfoModel) {\n            super(memberInfos, memberInfoModel, null);\n        }"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "04f464ba180035c363793d4fff29cc29b728ff92f2ed75c2c4d37dd49e68bb42"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference FusionPrototypeSignature",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/fusion/refactoring/MovePrototypeProcessor.java",
      "language": "JAVA",
      "line": 186,
      "offset": 54,
      "length": 24,
      "code": {
        "startLine": 184,
        "length": 24,
        "offset": 170,
        "surroundingCode": "        for (PsiElement element : myAffectedElements) {\n            PsiElement newElement = targetFile.add(element);\n            if (PsiTreeUtil.findChildOfType(element, FusionPrototypeSignature.class) != null) {\n                movedElements++;\n            }"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "0d311a2260e3442ed36175b2b6ae57e2538983dc5a0251a601bcb72f55c5912a"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference FusionPrototypeSignature",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/search/FusionPrototypeDeclarationContributor.java",
      "language": "JAVA",
      "line": 29,
      "offset": 98,
      "length": 24,
      "code": {
        "startLine": 27,
        "length": 24,
        "offset": 195,
        "surroundingCode": "        prototypeNames.forEach(prototypeName -> {\n            var prototypeSignatures = StubIndex\n                .getElements(FusionPrototypeDeclarationIndex.KEY, prototypeName, project, scope, FusionPrototypeSignature.class);\n            prototypeSignatures.forEach(signature -> {\n                if (signature.getType() != null) {"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "16ff59c22e29aedb8a7a951028c9427460bbdde81fbff277945d76d022c485b3"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference FusionPrototypeSignature",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/fusion/refactoring/MovePrototypeDialog.java",
      "language": "JAVA",
      "line": 321,
      "offset": 77,
      "length": 24,
      "code": {
        "startLine": 319,
        "length": 24,
        "offset": 83,
        "surroundingCode": "    }\n\n    private static class PrototypeInfoModel extends AbstractMemberInfoModel<FusionPrototypeSignature, PrototypeInfo> {\n    }\n"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "23e1ebca6143d54d6655608b09798ad11864929c1fb6ca54f5c600bd0532fff2"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference FusionPrototypeSignature",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/search/FusionPrototypeDeclarationContributor.java",
      "language": "JAVA",
      "line": 42,
      "offset": 20,
      "length": 24,
      "code": {
        "startLine": 40,
        "length": 24,
        "offset": 130,
        "surroundingCode": "        var nameParts = name.split(\":\");\n        var indexedName = nameParts.length > 1 ? nameParts[1] : name;\n        Collection<FusionPrototypeSignature> prototypes = StubIndex.getElements(FusionPrototypeDeclarationIndex.KEY, indexedName, parameters.getProject(), parameters.getSearchScope(), FusionPrototypeSignature.class);\n        prototypes.forEach(prototypeSignature -> {\n            if (prototypeSignature.getType() != null) {"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "2eb39b117a12124ea3847f1a1f13cde1d5f48024a2da6344d7b539abde5fd67b"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference FusionPrototypeSignature",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/fusion/refactoring/MovePrototypeProcessor.java",
      "language": "JAVA",
      "line": 113,
      "offset": 73,
      "length": 24,
      "code": {
        "startLine": 111,
        "length": 24,
        "offset": 79,
        "surroundingCode": "    }\n\n    private static List<PsiElement> getPsiElementsForPrototypeSignature(FusionPrototypeSignature prototype, Project project) {\n        PsiElement topLevelElement = prototype;\n        while (!(topLevelElement.getParent() instanceof PsiFile) && topLevelElement.getParent() != null) {"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "3839ff664b8f6596602a7f9157fe17a49f2bd61614f9dd616628597a28a20102"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference FusionPrototypeSignature",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/search/FusionPrototypeDeclarationContributor.java",
      "language": "JAVA",
      "line": 42,
      "offset": 185,
      "length": 24,
      "code": {
        "startLine": 40,
        "length": 24,
        "offset": 295,
        "surroundingCode": "        var nameParts = name.split(\":\");\n        var indexedName = nameParts.length > 1 ? nameParts[1] : name;\n        Collection<FusionPrototypeSignature> prototypes = StubIndex.getElements(FusionPrototypeDeclarationIndex.KEY, indexedName, parameters.getProject(), parameters.getSearchScope(), FusionPrototypeSignature.class);\n        prototypes.forEach(prototypeSignature -> {\n            if (prototypeSignature.getType() != null) {"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "3d3cbdcd78e8ed15f06eb7e3bd038393ef42034a009730b86a2025a11b0a2df6"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference EelTypes",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/eel/formatter/EelFormattingModelBuilder.java",
      "language": "JAVA",
      "line": 29,
      "offset": 40,
      "length": 8,
      "code": {
        "startLine": 27,
        "length": 8,
        "offset": 165,
        "surroundingCode": "import com.intellij.psi.formatter.common.DefaultInjectedLanguageBlockBuilder;\nimport de.vette.idea.neos.lang.eel.EelLanguage;\nimport de.vette.idea.neos.lang.eel.psi.EelTypes;\nimport org.jetbrains.annotations.NotNull;\nimport org.jetbrains.annotations.Nullable;"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "4ba7670a7e5f045a2b21861dc590afa2023549de3824cd668957dfed82fc6344"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference FusionPrototypeSignature",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/fusion/refactoring/MovePrototypeProcessor.java",
      "language": "JAVA",
      "line": 105,
      "offset": 65,
      "length": 24,
      "code": {
        "startLine": 103,
        "length": 24,
        "offset": 71,
        "surroundingCode": "    }\n\n    public static PsiElement[] collectAffectedElements(Iterable<FusionPrototypeSignature> prototypes, Project project) {\n        List<PsiElement> elements = new ArrayList<>();\n        for (FusionPrototypeSignature prototype : prototypes) {"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "4cb6bc0bb6e79360e36e9df64fea8fa5f588645c802dc57e0aad83f7f013f427"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference FusionPrototypeSignature",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/fusion/refactoring/MovePrototypeProcessor.java",
      "language": "JAVA",
      "line": 107,
      "offset": 14,
      "length": 24,
      "code": {
        "startLine": 105,
        "length": 24,
        "offset": 189,
        "surroundingCode": "    public static PsiElement[] collectAffectedElements(Iterable<FusionPrototypeSignature> prototypes, Project project) {\n        List<PsiElement> elements = new ArrayList<>();\n        for (FusionPrototypeSignature prototype : prototypes) {\n            elements.addAll(getPsiElementsForPrototypeSignature(prototype, project));\n        }"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "4e98639a846acc99efacbbe3886cdc94e5c753b33d18f258ecae0bf5f0c87475"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference FusionPrototypeSignature",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/fusion/refactoring/MovePrototypeToFile.java",
      "language": "JAVA",
      "line": 113,
      "offset": 14,
      "length": 24,
      "code": {
        "startLine": 111,
        "length": 24,
        "offset": 109,
        "surroundingCode": "\n    public static List<FusionPrototypeSignature> findAllPrototypeSignatures(PsiFile psiFile) {\n        List<FusionPrototypeSignature> signatures = new ArrayList<>(PsiTreeUtil.findChildrenOfType(psiFile, FusionPrototypeSignature.class));\n        return signatures.stream().filter(MovePrototypeToFile::isTopLevelPrototype).collect(Collectors.toList());\n    }"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "4eed64ee50bc305641bbaac054cefe17794eb1e2497a6aa87fdfb0ce0a224a08"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference FusionTypes",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/fusion/completion/FusionCompletionContributor.java",
      "language": "JAVA",
      "line": 23,
      "offset": 43,
      "length": 11,
      "code": {
        "startLine": 21,
        "length": 11,
        "offset": 167,
        "surroundingCode": "import com.intellij.codeInsight.completion.CompletionContributor;\nimport com.intellij.codeInsight.completion.CompletionType;\nimport de.vette.idea.neos.lang.fusion.psi.FusionTypes;\n\nimport static com.intellij.patterns.PlatformPatterns.psiElement;"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "780fdd5aca66407b3c9d00b0a35dedc89ab670ee30ff10404960c28558bfbbc9"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference FusionPrototypeSignature",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/fusion/refactoring/MovePrototypeToFile.java",
      "language": "JAVA",
      "line": 112,
      "offset": 24,
      "length": 24,
      "code": {
        "startLine": 110,
        "length": 24,
        "offset": 30,
        "surroundingCode": "    }\n\n    public static List<FusionPrototypeSignature> findAllPrototypeSignatures(PsiFile psiFile) {\n        List<FusionPrototypeSignature> signatures = new ArrayList<>(PsiTreeUtil.findChildrenOfType(psiFile, FusionPrototypeSignature.class));\n        return signatures.stream().filter(MovePrototypeToFile::isTopLevelPrototype).collect(Collectors.toList());"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "82c68652e898dc54f18e592b2abd3a9f102f076a13d03d0a53f3419d0fffb60a"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference FusionPrototypeSignature",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/fusion/completion/PrototypeProvider.java",
      "language": "JAVA",
      "line": 30,
      "offset": 43,
      "length": 24,
      "code": {
        "startLine": 28,
        "length": 24,
        "offset": 143,
        "surroundingCode": "import com.intellij.util.ProcessingContext;\nimport de.vette.idea.neos.lang.fusion.icons.FusionIcons;\nimport de.vette.idea.neos.lang.fusion.psi.FusionPrototypeSignature;\nimport de.vette.idea.neos.lang.fusion.stubs.index.FusionPrototypeDeclarationIndex;\nimport org.jetbrains.annotations.NotNull;"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "83d0ab608ea1c7b3d43079f19a0718e0034fecfac0307d2926d7a4356b462f9e"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference FusionPrototypeSignature",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/search/FusionPrototypeDeclarationContributor.java",
      "language": "JAVA",
      "line": 13,
      "offset": 43,
      "length": 24,
      "code": {
        "startLine": 11,
        "length": 24,
        "offset": 143,
        "surroundingCode": "import com.intellij.util.indexing.IdFilter;\nimport de.vette.idea.neos.lang.fusion.icons.FusionIcons;\nimport de.vette.idea.neos.lang.fusion.psi.FusionPrototypeSignature;\nimport de.vette.idea.neos.lang.fusion.stubs.index.FusionPrototypeDeclarationIndex;\nimport org.jetbrains.annotations.NotNull;"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "8e0dd902249dda0e532bb322f20d476af4cfc915b583c49c961170925cb40e61"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference FusionPrototypeSignature",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/fusion/refactoring/FusionRefactoringSupportProvider.java",
      "language": "JAVA",
      "line": 16,
      "offset": 36,
      "length": 24,
      "code": {
        "startLine": 14,
        "length": 24,
        "offset": 160,
        "surroundingCode": "    @Override\n    public boolean isMemberInplaceRenameAvailable(@NotNull PsiElement element, @Nullable PsiElement context) {\n        return (element instanceof FusionPrototypeSignature);\n    }\n}"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "a0b44106265620ecec6079c5cc6c28dd6a29e36ca68470b70335e96a8d040996"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference FusionPrototypeSignature",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/fusion/refactoring/FusionRefactoringSupportProvider.java",
      "language": "JAVA",
      "line": 5,
      "offset": 43,
      "length": 24,
      "code": {
        "startLine": 3,
        "length": 24,
        "offset": 143,
        "surroundingCode": "import com.intellij.lang.refactoring.RefactoringSupportProvider;\nimport com.intellij.psi.PsiElement;\nimport de.vette.idea.neos.lang.fusion.psi.FusionPrototypeSignature;\nimport org.jetbrains.annotations.NotNull;\nimport org.jetbrains.annotations.Nullable;"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "adc9f173452d02955ae651723dbfe3eaa8daede59f6fac36a1e88d19d8816a33"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference FusionPrototypeSignature",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/fusion/completion/PrototypeProvider.java",
      "language": "JAVA",
      "line": 44,
      "offset": 177,
      "length": 24,
      "code": {
        "startLine": 42,
        "length": 24,
        "offset": 211,
        "surroundingCode": "\n        for (String key : keys) {\n            Collection<FusionPrototypeSignature> prototypes = StubIndex.getElements(FusionPrototypeDeclarationIndex.KEY, key, project, GlobalSearchScope.projectScope(project), FusionPrototypeSignature.class );\n            for (FusionPrototypeSignature signature : prototypes) {\n                if (signature.getType() != null) {"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "bb005f9521077477c1e9542b93d300eddec4e919837136e8b23afa2abda34ff0"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference FusionPrototypeSignature",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/fusion/completion/PrototypeProvider.java",
      "language": "JAVA",
      "line": 45,
      "offset": 18,
      "length": 24,
      "code": {
        "startLine": 43,
        "length": 24,
        "offset": 261,
        "surroundingCode": "        for (String key : keys) {\n            Collection<FusionPrototypeSignature> prototypes = StubIndex.getElements(FusionPrototypeDeclarationIndex.KEY, key, project, GlobalSearchScope.projectScope(project), FusionPrototypeSignature.class );\n            for (FusionPrototypeSignature signature : prototypes) {\n                if (signature.getType() != null) {\n                    result.addElement(LookupElementBuilder.create(signature.getType().getText()).withIcon(FusionIcons.PROTOTYPE));"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "ec95842579d9b1bdfa85ffba0df174a4e9ed7721b3975c9b0f480d0f9dd39a0d"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference FusionPrototypeSignature",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/fusion/refactoring/MovePrototypeToFile.java",
      "language": "JAVA",
      "line": 82,
      "offset": 14,
      "length": 24,
      "code": {
        "startLine": 80,
        "length": 24,
        "offset": 54,
        "surroundingCode": "        // not sure when this is called\n\n        List<FusionPrototypeSignature> selectedSignatures = new ArrayList<>();\n        List<FusionPrototypeSignature> allSignatures = new ArrayList<>();\n        Set<PsiFile> visitedFiles = new HashSet<>();"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "f128ec3812a4c4bd9c7a158eb59276d31ed9132b47d5c5da4f0c29baaa02b45b"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference FusionPrototypeSignature",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/fusion/refactoring/MovePrototypeToFile.java",
      "language": "JAVA",
      "line": 113,
      "offset": 109,
      "length": 24,
      "code": {
        "startLine": 111,
        "length": 24,
        "offset": 204,
        "surroundingCode": "\n    public static List<FusionPrototypeSignature> findAllPrototypeSignatures(PsiFile psiFile) {\n        List<FusionPrototypeSignature> signatures = new ArrayList<>(PsiTreeUtil.findChildrenOfType(psiFile, FusionPrototypeSignature.class));\n        return signatures.stream().filter(MovePrototypeToFile::isTopLevelPrototype).collect(Collectors.toList());\n    }"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "f6054f1d422d723551d1c6d949564b4982e16276456a9360a546d15e681dc5af"
}]}