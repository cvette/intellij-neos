{"version":"3","listProblem":[{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference EelMethodCall",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/eel/resolve/ref/EelCompositeIdentifierReference.java",
      "language": "JAVA",
      "line": 6,
      "offset": 40,
      "length": 13,
      "code": {
        "startLine": 4,
        "length": 13,
        "offset": 138,
        "surroundingCode": "import com.intellij.psi.PsiElement;\nimport de.vette.idea.neos.lang.eel.psi.EelCompositeIdentifier;\nimport de.vette.idea.neos.lang.eel.psi.EelMethodCall;\nimport de.vette.idea.neos.lang.eel.psi.EelMethodName;\nimport de.vette.idea.neos.lang.fusion.resolve.ResolveEngine;"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "0b890d9568c7e3a2327a6c043fd2180f32f90cb1ad6eced382f3ab441564b4c4"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference EelCompositeIdentifier",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/eel/resolve/ref/EelCompositeIdentifierReference.java",
      "language": "JAVA",
      "line": 15,
      "offset": 44,
      "length": 22,
      "code": {
        "startLine": 13,
        "length": 22,
        "offset": 140,
        "surroundingCode": "\npublic class EelCompositeIdentifierReference extends EelReferenceBase<EelCompositeIdentifier> {\n    public EelCompositeIdentifierReference(EelCompositeIdentifier psiElement) {\n        super(psiElement);\n    }"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "34ed7776bca90196ce325047979e7dc688b07621c3d70af9f5e9111e766a7b71"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference FusionPath",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/fusion/psi/impl/ext/FusionCopiedPrototypeSignatureImplMixin.java",
      "language": "JAVA",
      "line": 40,
      "offset": 39,
      "length": 10,
      "code": {
        "startLine": 38,
        "length": 10,
        "offset": 88,
        "surroundingCode": "\n    protected boolean isSingleLineDefinition() {\n        return getParent() instanceof FusionPath\n                && ((FusionPath) getParent()).isPrototypeClassProperty()\n                && getParent().getParent() instanceof FusionPropertyAssignment"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "453ccb14688b225ef02a65cc6d7d2d2514851102410a1ae91923c558802e96e0"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference FusionPrototypeSignature",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/fusion/psi/impl/ext/FusionPathImplMixin.java",
      "language": "JAVA",
      "line": 55,
      "offset": 40,
      "length": 24,
      "code": {
        "startLine": 53,
        "length": 24,
        "offset": 83,
        "surroundingCode": "    @Override\n    public String getName() {\n        if (getFirstChild() instanceof FusionPrototypeSignature) {\n            FusionPrototypeSignature signature = ((FusionPrototypeSignature) getFirstChild());\n            if (signature.getType() != null) {"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "4a476e8ef83d6174293bcd03365d8fbdc1e976b70d346ab84ca4f1d99facb06b"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference FusionCopiedPrototypeSignature",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/fusion/psi/impl/ext/FusionCopiedPrototypeSignatureImplMixin.java",
      "language": "JAVA",
      "line": 26,
      "offset": 100,
      "length": 30,
      "code": {
        "startLine": 24,
        "length": 30,
        "offset": 142,
        "surroundingCode": "import org.jetbrains.annotations.NotNull;\n\npublic abstract class FusionCopiedPrototypeSignatureImplMixin extends FusionElementImpl implements FusionCopiedPrototypeSignature {\n\n    public FusionCopiedPrototypeSignatureImplMixin(@NotNull ASTNode astNode) {"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "78d605767b3288568130f39b0cd460d24d5558e3617db91794ef403f286ead54"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference FusionPrototypeSignature",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/fusion/psi/impl/ext/FusionPathImplMixin.java",
      "language": "JAVA",
      "line": 56,
      "offset": 13,
      "length": 24,
      "code": {
        "startLine": 54,
        "length": 24,
        "offset": 109,
        "surroundingCode": "    public String getName() {\n        if (getFirstChild() instanceof FusionPrototypeSignature) {\n            FusionPrototypeSignature signature = ((FusionPrototypeSignature) getFirstChild());\n            if (signature.getType() != null) {\n                return signature.getType().getText();"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "8e6b7d89c16737af996387f521a77e6902098b58a3b69cfba32b8fdd726af3b4"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference FusionNamespaceDeclaration",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/fusion/stubs/FusionNamespaceDeclarationStub.java",
      "language": "JAVA",
      "line": 43,
      "offset": 16,
      "length": 26,
      "code": {
        "startLine": 41,
        "length": 26,
        "offset": 34,
        "surroundingCode": "\n        @Override\n        public FusionNamespaceDeclaration createPsi(@NotNull FusionNamespaceDeclarationStub stub) {\n            return new FusionNamespaceDeclarationImpl(stub, this);\n        }"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "90a814194cd17dec520de9407bcabf20aad986c2cfa4c7ace7b75b6922709cd8"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference EelCompositeIdentifier",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/eel/resolve/ref/EelCompositeIdentifierReference.java",
      "language": "JAVA",
      "line": 5,
      "offset": 40,
      "length": 22,
      "code": {
        "startLine": 3,
        "length": 22,
        "offset": 119,
        "surroundingCode": "import com.intellij.openapi.util.TextRange;\nimport com.intellij.psi.PsiElement;\nimport de.vette.idea.neos.lang.eel.psi.EelCompositeIdentifier;\nimport de.vette.idea.neos.lang.eel.psi.EelMethodCall;\nimport de.vette.idea.neos.lang.eel.psi.EelMethodName;"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "918054c67689ab704b93d7c6b87a0884b84df5472a0942c44e839808ab2a9e06"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference FusionPath",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/fusion/psi/impl/ext/FusionCopiedPrototypeSignatureImplMixin.java",
      "language": "JAVA",
      "line": 41,
      "offset": 22,
      "length": 10,
      "code": {
        "startLine": 39,
        "length": 10,
        "offset": 119,
        "surroundingCode": "    protected boolean isSingleLineDefinition() {\n        return getParent() instanceof FusionPath\n                && ((FusionPath) getParent()).isPrototypeClassProperty()\n                && getParent().getParent() instanceof FusionPropertyAssignment\n                && getParent().getParent().getParent() instanceof FusionFile;"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "9d492c4e4e1516bccfbdca172fe0b9fccbe55a73103779c26e21422c3dfa1791"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference EelMethodCall",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/eel/codeInsight/hints/EelInlayParameterHintsProvider.java",
      "language": "JAVA",
      "line": 34,
      "offset": 32,
      "length": 13,
      "code": {
        "startLine": 32,
        "length": 13,
        "offset": 93,
        "surroundingCode": "        ArrayList<InlayInfo> inlayInfos = new ArrayList<>();\n\n        if (element instanceof EelMethodCall) {\n            List<PsiElement> phpMethods = null;\n"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "a5bd431338f9edea69a8b64291c130e28207de5db2116cb00f8838074a9cb517"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference FusionType",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/fusion/psi/impl/ext/FusionTypeImplMixin.java",
      "language": "JAVA",
      "line": 29,
      "offset": 80,
      "length": 10,
      "code": {
        "startLine": 27,
        "length": 10,
        "offset": 122,
        "surroundingCode": "import org.jetbrains.annotations.NotNull;\n\npublic abstract class FusionTypeImplMixin extends FusionElementImpl implements FusionType {\n\n    public FusionTypeImplMixin(@NotNull ASTNode astNode) {"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "a92e37d289d440dd8b776f43dddca418e7ca5cf0429cac3d390940e6801f8d9f"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference FusionNamespaceDeclaration",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/fusion/stubs/FusionNamespaceDeclarationStub.java",
      "language": "JAVA",
      "line": 29,
      "offset": 62,
      "length": 26,
      "code": {
        "startLine": 27,
        "length": 26,
        "offset": 90,
        "surroundingCode": "import java.io.IOException;\n\npublic class FusionNamespaceDeclarationStub extends StubBase<FusionNamespaceDeclaration> {\n\n    protected String alias;"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "ad4de3c6cb48d8f8f060c5c40a469fec9490f8214ea8dac6d4f375c8fe66f9a5"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference EelCompositeIdentifier",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/eel/codeInsight/hints/EelInlayParameterHintsProvider.java",
      "language": "JAVA",
      "line": 8,
      "offset": 40,
      "length": 22,
      "code": {
        "startLine": 6,
        "length": 22,
        "offset": 144,
        "surroundingCode": "import com.jetbrains.php.lang.psi.elements.Method;\nimport com.jetbrains.php.lang.psi.elements.Parameter;\nimport de.vette.idea.neos.lang.eel.psi.EelCompositeIdentifier;\nimport de.vette.idea.neos.lang.eel.psi.EelConditionalExpression;\nimport de.vette.idea.neos.lang.eel.psi.EelMethodCall;"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "b38143f62af675ac2a7a5c439fb09066f68691d5bf9c5c6e88b0b6d3554d10bf"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference EelMethodName",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/eel/resolve/ref/EelCompositeIdentifierReference.java",
      "language": "JAVA",
      "line": 7,
      "offset": 40,
      "length": 13,
      "code": {
        "startLine": 5,
        "length": 13,
        "offset": 156,
        "surroundingCode": "import de.vette.idea.neos.lang.eel.psi.EelCompositeIdentifier;\nimport de.vette.idea.neos.lang.eel.psi.EelMethodCall;\nimport de.vette.idea.neos.lang.eel.psi.EelMethodName;\nimport de.vette.idea.neos.lang.fusion.resolve.ResolveEngine;\nimport org.jetbrains.annotations.NotNull;"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "bc17b5f9a3601b9e9d7f1c00a370ed1bd138bd926fa12cf1d4b2cede515c4e09"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference FusionPrototypeSignature",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/fusion/psi/impl/ext/FusionPathImplMixin.java",
      "language": "JAVA",
      "line": 56,
      "offset": 52,
      "length": 24,
      "code": {
        "startLine": 54,
        "length": 24,
        "offset": 148,
        "surroundingCode": "    public String getName() {\n        if (getFirstChild() instanceof FusionPrototypeSignature) {\n            FusionPrototypeSignature signature = ((FusionPrototypeSignature) getFirstChild());\n            if (signature.getType() != null) {\n                return signature.getType().getText();"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "c8fd52b4a4098108f0e9ebeb08c1ff458107160ca1e57b6fb3a23bc267ec0b99"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference FusionPath",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/fusion/psi/impl/ext/FusionPathImplMixin.java",
      "language": "JAVA",
      "line": 26,
      "offset": 80,
      "length": 10,
      "code": {
        "startLine": 24,
        "length": 10,
        "offset": 122,
        "surroundingCode": "import org.jetbrains.annotations.NotNull;\n\npublic abstract class FusionPathImplMixin extends FusionElementImpl implements FusionPath {\n    public FusionPathImplMixin(@NotNull ASTNode astNode) {\n        super(astNode);"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "dd89448a7e42bdc725913790f1d3b58e1ebc28c74807cf22b4efed5fe91f2604"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference FusionType",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/fusion/psi/impl/ext/FusionTypeImplMixin.java",
      "language": "JAVA",
      "line": 23,
      "offset": 43,
      "length": 10,
      "code": {
        "startLine": 21,
        "length": 10,
        "offset": 114,
        "surroundingCode": "import com.intellij.lang.ASTNode;\nimport com.intellij.psi.PsiReference;\nimport de.vette.idea.neos.lang.fusion.psi.FusionType;\nimport de.vette.idea.neos.lang.fusion.psi.impl.FusionElementImpl;\nimport de.vette.idea.neos.lang.fusion.resolve.ref.FusionReference;"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "dfb17773c53ec0e26a4c6879295215d10b9aa9c45c6f93eb1e8a61045a77a8ec"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference FusionPropertyAssignment",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/fusion/psi/impl/ext/FusionCopiedPrototypeSignatureImplMixin.java",
      "language": "JAVA",
      "line": 42,
      "offset": 55,
      "length": 24,
      "code": {
        "startLine": 40,
        "length": 24,
        "offset": 176,
        "surroundingCode": "        return getParent() instanceof FusionPath\n                && ((FusionPath) getParent()).isPrototypeClassProperty()\n                && getParent().getParent() instanceof FusionPropertyAssignment\n                && getParent().getParent().getParent() instanceof FusionFile;\n    }"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "e562544279c1c85d8e095e9b91c3d067b1503e055c72ab3d2e3967584a4fd61e"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference EelConditionalExpression",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/eel/codeInsight/hints/EelInlayParameterHintsProvider.java",
      "language": "JAVA",
      "line": 9,
      "offset": 40,
      "length": 24,
      "code": {
        "startLine": 7,
        "length": 24,
        "offset": 156,
        "surroundingCode": "import com.jetbrains.php.lang.psi.elements.Parameter;\nimport de.vette.idea.neos.lang.eel.psi.EelCompositeIdentifier;\nimport de.vette.idea.neos.lang.eel.psi.EelConditionalExpression;\nimport de.vette.idea.neos.lang.eel.psi.EelMethodCall;\nimport de.vette.idea.neos.lang.fusion.resolve.ResolveEngine;"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "eb9ae82288e0a3acea81bc42cfc30c5e1467121c74da772bdcacabd25d55ea0c"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference EelMethodCall",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/eel/codeInsight/hints/EelInlayParameterHintsProvider.java",
      "language": "JAVA",
      "line": 10,
      "offset": 40,
      "length": 13,
      "code": {
        "startLine": 8,
        "length": 13,
        "offset": 167,
        "surroundingCode": "import de.vette.idea.neos.lang.eel.psi.EelCompositeIdentifier;\nimport de.vette.idea.neos.lang.eel.psi.EelConditionalExpression;\nimport de.vette.idea.neos.lang.eel.psi.EelMethodCall;\nimport de.vette.idea.neos.lang.fusion.resolve.ResolveEngine;\nimport org.jetbrains.annotations.NotNull;"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "fb2f7631d4389ecece88b5a21820a16b1250a9090c52108a49292d484f376f12"
}]}