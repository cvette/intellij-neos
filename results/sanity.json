{"version":"3","listProblem":[{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference FusionType",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/fusion/usages/UsagesTypeProvider.java",
      "language": "JAVA",
      "line": 41,
      "offset": 32,
      "length": 10,
      "code": {
        "startLine": 39,
        "length": 10,
        "offset": 98,
        "surroundingCode": "    public @Nullable UsageType getUsageType(PsiElement element) {\n\n        if (element instanceof FusionType) {\n            PsiElement parentElement = element.getParent();\n            if (parentElement instanceof FusionPrototypeInstance) {"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "189c3f319b89540e645074d7f51f5638d34fae6546dbbdbc97ed4a8dfbb5a681"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference FusionNamespaceDeclaration",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/fusion/stubs/FusionNamespaceDeclarationStub.java",
      "language": "JAVA",
      "line": 49,
      "offset": 67,
      "length": 26,
      "code": {
        "startLine": 47,
        "length": 26,
        "offset": 101,
        "surroundingCode": "        @NotNull\n        @Override\n        public FusionNamespaceDeclarationStub createStub(@NotNull FusionNamespaceDeclaration psi, StubElement parentStub) {\n            String alias = psi.getAlias() != null ? psi.getAlias().getText() : \"\";\n            String namespace = psi.getNamespace() != null ? psi.getNamespace().getText() : \"\";"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "2f2ac3cee83b24724b6c63224a82db62dab6db9a7bdf737e5e5b9a340a42b06d"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference EelParser",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/eel/EelParserDefinition.java",
      "language": "JAVA",
      "line": 34,
      "offset": 43,
      "length": 9,
      "code": {
        "startLine": 32,
        "length": 9,
        "offset": 139,
        "surroundingCode": "import de.vette.idea.neos.lang.eel.psi.EelFile;\nimport de.vette.idea.neos.lang.eel.psi.EelTypes;\nimport de.vette.idea.neos.lang.eel.parser.EelParser;\nimport de.vette.idea.neos.lang.eel.stubs.EelFileStub;\nimport org.jetbrains.annotations.NotNull;"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "3043aa4f651b655de788c3d8f1c5b76b42ce961d17afce2e0b54c5cc482ce76e"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference parser",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/eel/EelParserDefinition.java",
      "language": "JAVA",
      "line": 34,
      "offset": 36,
      "length": 6,
      "code": {
        "startLine": 32,
        "length": 6,
        "offset": 132,
        "surroundingCode": "import de.vette.idea.neos.lang.eel.psi.EelFile;\nimport de.vette.idea.neos.lang.eel.psi.EelTypes;\nimport de.vette.idea.neos.lang.eel.parser.EelParser;\nimport de.vette.idea.neos.lang.eel.stubs.EelFileStub;\nimport org.jetbrains.annotations.NotNull;"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "30f7985586efe4f307518ca45b4ff96aa7c77462c0b31c67fc7eb5796efdf3eb"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference _AfxLexer",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/afx/parser/InnerAfxLexer.java",
      "language": "JAVA",
      "line": 13,
      "offset": 35,
      "length": 9,
      "code": {
        "startLine": 11,
        "length": 9,
        "offset": 64,
        "surroundingCode": "\n    public InnerAfxLexer() {\n        super(new FlexAdapter(new _AfxLexer()), TOKENS_TO_MERGE);\n    }\n"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "333183bc92ee70046b6d65439e091574cf336d9d7135e83e41bd0989b209ec1d"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference EelMethodCall",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/eel/codeInsight/hints/EelInlayParameterHintsProvider.java",
      "language": "JAVA",
      "line": 37,
      "offset": 13,
      "length": 13,
      "code": {
        "startLine": 35,
        "length": 13,
        "offset": 61,
        "surroundingCode": "            List<PsiElement> phpMethods = null;\n\n            EelMethodCall methodCall = (EelMethodCall) element;\n            List<EelConditionalExpression> list = methodCall.getConditionalExpressionList();\n            if (methodCall.getPrevSibling() != null && methodCall.getPrevSibling().getPrevSibling() != null) {"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "5854336d3fa2904d28e5e0fc4d53135740cac259f610cfd7eeb66839f7f1e97f"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference FusionType",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/fusion/usages/PrototypeFindUsagesProvider.java",
      "language": "JAVA",
      "line": 78,
      "offset": 13,
      "length": 10,
      "code": {
        "startLine": 76,
        "length": 10,
        "offset": 167,
        "surroundingCode": "    public @Nls @NotNull String getNodeText(@NotNull PsiElement element, boolean useFullName) {\n        if (element instanceof FusionPrototypeSignature) {\n            FusionType type = ((FusionPrototypeSignature) element).getType();\n            if (type != null && type.getText() != null) {\n                return type.getText();"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "70b60110c12d5311a08082dc9cc86e5279a91b0a2425e654ac5d4560ae96ccb1"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference FusionPrototypeSignature",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/fusion/usages/PrototypeFindUsagesProvider.java",
      "language": "JAVA",
      "line": 65,
      "offset": 32,
      "length": 24,
      "code": {
        "startLine": 63,
        "length": 24,
        "offset": 127,
        "surroundingCode": "    @Override\n    public @Nls @NotNull String getDescriptiveName(@NotNull PsiElement element) {\n        if (element instanceof FusionPrototypeSignature) {\n            FusionType type = ((FusionPrototypeSignature) element).getType();\n            if (type != null && type.getText() != null) {"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "88b12b93cd1cad3d5a8c4da428e533d69262bcb74d70feb6abe4c9746e525de9"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference FusionNamespaceDeclaration",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/fusion/stubs/FusionNamespaceDeclarationStub.java",
      "language": "JAVA",
      "line": 43,
      "offset": 16,
      "length": 26,
      "code": {
        "startLine": 41,
        "length": 26,
        "offset": 34,
        "surroundingCode": "\n        @Override\n        public FusionNamespaceDeclaration createPsi(@NotNull FusionNamespaceDeclarationStub stub) {\n            return new FusionNamespaceDeclarationImpl(stub, this);\n        }"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "90a814194cd17dec520de9407bcabf20aad986c2cfa4c7ace7b75b6922709cd8"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference FusionPrototypeSignature",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/fusion/usages/PrototypeFindUsagesProvider.java",
      "language": "JAVA",
      "line": 78,
      "offset": 33,
      "length": 24,
      "code": {
        "startLine": 76,
        "length": 24,
        "offset": 187,
        "surroundingCode": "    public @Nls @NotNull String getNodeText(@NotNull PsiElement element, boolean useFullName) {\n        if (element instanceof FusionPrototypeSignature) {\n            FusionType type = ((FusionPrototypeSignature) element).getType();\n            if (type != null && type.getText() != null) {\n                return type.getText();"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "9ec98bd212a86e8e1a01b6215decbdbf5d8fdde368402783b87b50eab05267bd"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference EelMethodCall",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/eel/codeInsight/hints/EelInlayParameterHintsProvider.java",
      "language": "JAVA",
      "line": 34,
      "offset": 32,
      "length": 13,
      "code": {
        "startLine": 32,
        "length": 13,
        "offset": 93,
        "surroundingCode": "        ArrayList<InlayInfo> inlayInfos = new ArrayList<>();\n\n        if (element instanceof EelMethodCall) {\n            List<PsiElement> phpMethods = null;\n"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "a5bd431338f9edea69a8b64291c130e28207de5db2116cb00f8838074a9cb517"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference EelParser",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/eel/EelParserDefinition.java",
      "language": "JAVA",
      "line": 50,
      "offset": 20,
      "length": 9,
      "code": {
        "startLine": 48,
        "length": 9,
        "offset": 86,
        "surroundingCode": "    @Override\n    public PsiParser createParser(Project project) {\n        return new EelParser();\n    }\n"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "a8dda3acb5eab638c49c2b28753a02a0215ac68f5d201f1b429a794415df5e5d"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference FusionNamespaceDeclaration",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/fusion/stubs/FusionNamespaceDeclarationStub.java",
      "language": "JAVA",
      "line": 29,
      "offset": 62,
      "length": 26,
      "code": {
        "startLine": 27,
        "length": 26,
        "offset": 90,
        "surroundingCode": "import java.io.IOException;\n\npublic class FusionNamespaceDeclarationStub extends StubBase<FusionNamespaceDeclaration> {\n\n    protected String alias;"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "ad4de3c6cb48d8f8f060c5c40a469fec9490f8214ea8dac6d4f375c8fe66f9a5"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference EelTypes",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/eel/EelParserDefinition.java",
      "language": "JAVA",
      "line": 33,
      "offset": 40,
      "length": 8,
      "code": {
        "startLine": 31,
        "length": 8,
        "offset": 126,
        "surroundingCode": "import com.intellij.psi.tree.TokenSet;\nimport de.vette.idea.neos.lang.eel.psi.EelFile;\nimport de.vette.idea.neos.lang.eel.psi.EelTypes;\nimport de.vette.idea.neos.lang.eel.parser.EelParser;\nimport de.vette.idea.neos.lang.eel.stubs.EelFileStub;"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "afb6c6fe9a8d9dfb4d69a059710fe3163344d7bcc6776caddfe925bdac590d97"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference FusionNamespaceDeclarationImpl",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/fusion/stubs/FusionNamespaceDeclarationStub.java",
      "language": "JAVA",
      "line": 44,
      "offset": 24,
      "length": 30,
      "code": {
        "startLine": 42,
        "length": 30,
        "offset": 141,
        "surroundingCode": "        @Override\n        public FusionNamespaceDeclaration createPsi(@NotNull FusionNamespaceDeclarationStub stub) {\n            return new FusionNamespaceDeclarationImpl(stub, this);\n        }\n"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "bd344c9f95d2eae8fa7431d35bbacc2eeefdbef50ce8f275f9b99baa6fc0eb07"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference FusionPropertyAssignment",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/fusion/stubs/StubElementTypeFactory.java",
      "language": "JAVA",
      "line": 21,
      "offset": 43,
      "length": 24,
      "code": {
        "startLine": 19,
        "length": 24,
        "offset": 86,
        "surroundingCode": "\nimport com.intellij.psi.tree.IElementType;\nimport de.vette.idea.neos.lang.fusion.psi.FusionPropertyAssignment;\nimport org.jetbrains.annotations.NotNull;\n"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "bee984ebd6ae42f2d7dcd86816e58ebd6fb9bf3b9792e15585b68d3a06a088c6"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference FusionPrototypeSignature",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/fusion/usages/PrototypeFindUsagesProvider.java",
      "language": "JAVA",
      "line": 77,
      "offset": 32,
      "length": 24,
      "code": {
        "startLine": 75,
        "length": 24,
        "offset": 141,
        "surroundingCode": "    @Override\n    public @Nls @NotNull String getNodeText(@NotNull PsiElement element, boolean useFullName) {\n        if (element instanceof FusionPrototypeSignature) {\n            FusionType type = ((FusionPrototypeSignature) element).getType();\n            if (type != null && type.getText() != null) {"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "d2c3dad45cf6f8e7f6b3a763c1e402ead821cd139cbd6ba84d00b01ddcdccc44"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference EelTypes",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/eel/highlighting/EelSyntaxHighlighter.java",
      "language": "JAVA",
      "line": 26,
      "offset": 40,
      "length": 8,
      "code": {
        "startLine": 24,
        "length": 8,
        "offset": 134,
        "surroundingCode": "import com.intellij.psi.tree.IElementType;\nimport de.vette.idea.neos.lang.eel.EelLexerAdapter;\nimport de.vette.idea.neos.lang.eel.psi.EelTypes;\nimport de.vette.idea.neos.lang.fusion.highlighting.FusionHighlightingColors;\nimport org.jetbrains.annotations.NotNull;"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "d7b812ac2d61a01a74212c2a5d315784b8d6610ea605d4b5e01b5f76a4f1e143"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference FusionPrototypeInstance",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/fusion/usages/UsagesTypeProvider.java",
      "language": "JAVA",
      "line": 43,
      "offset": 42,
      "length": 23,
      "code": {
        "startLine": 41,
        "length": 23,
        "offset": 146,
        "surroundingCode": "        if (element instanceof FusionType) {\n            PsiElement parentElement = element.getParent();\n            if (parentElement instanceof FusionPrototypeInstance) {\n                return INSTANCE;\n            }"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "e26633d56859bd71adaac353590ae8cee6ea9de7ce0a1564ab5ed51fcd046f74"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference EelConditionalExpression",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/eel/codeInsight/hints/EelInlayParameterHintsProvider.java",
      "language": "JAVA",
      "line": 38,
      "offset": 18,
      "length": 24,
      "code": {
        "startLine": 36,
        "length": 24,
        "offset": 82,
        "surroundingCode": "\n            EelMethodCall methodCall = (EelMethodCall) element;\n            List<EelConditionalExpression> list = methodCall.getConditionalExpressionList();\n            if (methodCall.getPrevSibling() != null && methodCall.getPrevSibling().getPrevSibling() != null) {\n                PsiElement compositeElement = methodCall.getPrevSibling().getPrevSibling();"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "f4757146166ec07210e6e07f9a6219958d58bfdf697b0ec5c7aa87941c900a20"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Java sanity",
  "tags": [
    "JAVA",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference EelMethodCall",
  "detailsInfo": "Reports unresolved references in Java code.",
  "sources": [
    {
      "type": "file",
      "path": "src/main/java/de/vette/idea/neos/lang/eel/codeInsight/hints/EelInlayParameterHintsProvider.java",
      "language": "JAVA",
      "line": 37,
      "offset": 41,
      "length": 13,
      "code": {
        "startLine": 35,
        "length": 13,
        "offset": 89,
        "surroundingCode": "            List<PsiElement> phpMethods = null;\n\n            EelMethodCall methodCall = (EelMethodCall) element;\n            List<EelConditionalExpression> list = methodCall.getConditionalExpressionList();\n            if (methodCall.getPrevSibling() != null && methodCall.getPrevSibling().getPrevSibling() != null) {"
      }
    }
  ],
  "attributes": {
    "module": "Intellij_Neos.main",
    "inspectionName": "QodanaJavaSanity"
  },
  "hash": "faf4335ccf7b5afb34d692dfbce57dd26c7c202475bd2303f1cf00719ce3974e"
}]}